class Solution {
public:
    set<vector<int>> temp;
    int twosum(vector<int> &arr, int i, int j, long target){
        long sum=0;
        int a = i-1, b = j+1;
        while(i<j){
            sum = arr[i] + 0ll + arr[j];
            if(sum==target){ temp.insert({arr[a], arr[i], arr[j], arr[b]}); i++; j--;}
            else if(sum>target) j--;
            else i++;
        }
        return false;
    }

    vector<vector<int>> fourSum(vector<int>& arr, int target) {
        int n = arr.size();
        vector<vector<int>> ans;
        sort(arr.begin(), arr.end());
        
        int i=0, j=n-1;
        for(int i=0; i<n; i++){
            for(int j=i+3; j<n; j++){
                long sum = target + 0ll - arr[i] + 0ll- arr[j];
                twosum(arr, i+1, j-1, sum);
            }
        }
        for(int i=0; i<n; i++) cout<<arr[i]<<" ";
        for(auto &v: temp) ans.push_back(v);
        return ans;
    }
};
